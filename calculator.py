def calculate(expression):
    """
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –≤—ã—Ä–∞–∂–µ–Ω–∏–µ–º, –≤—ã—á–∏—Å–ª—è–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç +, -, *, /.
    """
    try:
        # –†–∞–∑–±–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –Ω–∞ —á–∞—Å—Ç–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä "5 + 3" -> ["5", "+", "3"]
        parts = expression.split()
        if len(parts) != 3:
            return "–û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ '—á–∏—Å–ª–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä —á–∏—Å–ª–æ' (–Ω–∞–ø—Ä–∏–º–µ—Ä, 10 / 2)."

        num1 = float(parts[0])
        operator = parts[1]
        num2 = float(parts[2])

        if operator == '+':
            return num1 + num2
        elif operator == '-':
            return num1 - num2
        elif operator == '*':
            return num1 * num2
        elif operator == '/':
            if num2 == 0:
                return "–û—à–∏–±–∫–∞: –î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ!"
            return num1 / num2
        else:
            return "–û—à–∏–±–∫–∞: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ +, -, * –∏–ª–∏ /."

    except ValueError:
        return "–û—à–∏–±–∫–∞: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–∞."
    except Exception as e:
        return f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}"

def main():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞.
    """
    print("ü§ñ –ë–æ—Ç-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∑–∞–ø—É—â–µ–Ω!")
    print("–í–≤–µ–¥–∏—Ç–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 5 * 3) –∏–ª–∏ '–≤—ã—Ö–æ–¥' –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.")

    while True:
        user_input = input("–í–∞—à –ø—Ä–∏–º–µ—Ä: ")

        if user_input.lower() == '–≤—ã—Ö–æ–¥':
            print("–ë–æ—Ç: –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break

        result = calculate(user_input)
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")

if __name__ == "__main__":
    main()
